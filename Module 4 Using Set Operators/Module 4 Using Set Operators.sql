-- Module 4 Using Set Operators
-- SET OPERATORS: OPERADORES DE TEORÍA DE CONJUNTOS
-- UNION Queries
-- TWO OR MORE QUERIES COMBINED TO GIVE US MORE ROWS (INSTEAD OF MORE COLUMNS AS IN THE JOINS)
-- BY DEFAULT "UNION" REMOVES DUPLICATES > THIS MAY AFFECT PERFORMANCE IN NOT AN INSIGNIFICANT WAY
-- "UNION ALL" RETAINS DUPLICATES

-- ITS VERY COMMON THAT, WHEN USING "UNION", A COLUMN IS ADDED TO INFORM THE SOURCE OF DATA (THE TABLES FROM WHICH IT WAS TOOK)
-- FROM A PERFOMANCE PERSPECTIVE IT IS ADVISABLE TO USE "UNION ALL"
-- "IF YOU KNWON THERE ARE NO DUPLICATES, WHY DO YOU CONSUME COMPUTING POWER IN VAIN?)
-- IN PRATICE ONE SHOULD START WITH A "UNION ALL", AND ONLY USE "UNION" IF DUPLICATES ARE SUSPECTED
-- IN THE SAME SENSE THAT PEOPLE DON'T USUALLY WRITE "SELECT DISTINCT" ONE SHOULD VEER TOWARDS: "UNION ALL"
/*	
	GUIDELINES FOR WRITING QUERIES
	# COLUMN ALIASES ARE ONLY TO BE DEFINED IN THE FIRST QUERY (COLUMN NAMES IN SUBSEQUENT QUERIES ARE IGNORED)
	# THE NUMBER OF COLUMNS SHOULD BE THE SAME IN ALL THE UNIONED QUERIES
	(IF THE DATA IS MISSING IN ONE OF THE QUERIES A NULL OR A DEFAULT VALUE MUST BE SET)
	# THE COLUMNS TO BE UNIONED MUST BE OF EXACT OF APPROXIMATELY SIMILAR DATA TYPES
	(SQL SERVER WILL DO EXPLICIT CONVERSION BUT UP TO A CERTAIN POINT)
	(BEYOND THAT AN EXPLICIT CONVERSION OR CAST IS NEEDED)
	(Essentially similar queries is what's necessary to generate a successful union query)
*/
-- Demo: Creating UNION Queries
-- union of employees and customer tables

USE [AdventureWorksLT2012]
SELECT 
* 
FROM [SalesLT].[Employee]

SELECT 
* 
FROM [SalesLT].[Customer]

/*
Key Points
Use UNION to combine the rowsets returned by mulitple queries.
Each unioned query must return the same number of columns with compatible data types.
By default, UNION eliminates duplicate rows. Specify the ALL option to include duplicates 
(or to avoid the overhead of checking for duplicates when you know in advance that there are none).

UNION ALL: A + B

UNION: A + B - (A ^ B)

*/

-- INTERSECT and EXCEPT Queries

-- INTERSECT (A ^ B)
-- NOT SURPRISINGLY, "INTERSECT" RETRIEVES ROWS THAT ARE PRESENT IN BOTH QUERIES (DUPLICATES)
-- IT IS THE EQUIVALENT OF AN INNER JOIN, BUT INSTEAD FOR COLUMNS, IT IS USED FOR ROWS

-- EXCEPT (ALSO CALLED MINUS)
-- EXCEPT: (A - B) OR (A -  (A ^ B))
-- IN THE EXCEPT OPERATOR THE ORDER IN WHICH TABLES APPEAR IN THE QUERY AFFECTS THE OUTPUT

-- Demo: Creating INTERSECT and EXCEPT Queries+
/*
Key Points
Use INTERSECT to return only rows that are returned by both queries.
Use EXCEPT to return rows from the first query that are not returned by the second query.
*/

-- UNION QUERIES CAN BE USED TO PUT TOGETHER QUERIES FROM THE SAME TABLE
